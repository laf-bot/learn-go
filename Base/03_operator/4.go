package main

import "fmt"

/**
* Operator 运算符-位运算符
* 位运算符对整数在内存中的二进制位进行操作

& 按位与运算符，“&”是双目运算符。其功能是参与运算的两数各对应的二进位相与。

| 按位或运算符，“|”是双目运算符。其功能是参与运算的两数各对应的二进位相或。

^ 按位异或运算符“^”是双目运算符。其功能是参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1.const

<< 左移运算符“<<”是双目运算符。左移n位就是乘以2的n次方。其功能是把“<<”左边的运算数的各二进制位全部左移若干位，由“<<”右边的指数移动位数，高位丢弃，低位补0

>> 右移运算符“>>”是双目运算符。右移n位就是除以2的n次方。其功能是把“>>”左边的运算数的各二进位全部右移若干位，“>>” 右边的数指定移动的位数

**/

func main() {

	var a uint = 60
	var b uint = 13
	var c uint = 0

	c = a & b

	fmt.Println("a&b=", c)

	c = a | b

	fmt.Println("a|b=", c)

	c = a ^ b

	fmt.Println("a^b=", c)

	c = a << 2

	fmt.Println("a<<2", c)

	c = a >> 2

	fmt.Println("a>>2", c)

	fmt.Print(200 & 2)

}
